/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Dialog } from '@mui/material';
import { styled } from '@mui/material/styles';
import Card27 from 'components/Card27/Card27';
import ProductCardTemp from 'components/ProductCardTemp/ProductCardTemp';
import { ProductCardProps } from 'types';
import useProductCard from 'components/ProductCard/useProductCard';

const ProductCard1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  width: '100%',
  height: `1030px`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
});

const Productdialogcontain: any = styled('div')({
  display: `flex`,
  position: `absolute`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `10px`,
  boxSizing: `border-box`,
  width: `1460px`,
  height: `1030px`,
  left: `349px`,
  top: `0px`,
});

const Card271: any = styled(Card27)(({ theme }: any) => ({
  width: `460px`,
  margin: `0px`,
}));

const Productcardcontainer: any = styled('div')({
  display: `flex`,
  position: `absolute`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `10px`,
  boxSizing: `border-box`,
  width: `331px`,
  height: `516px`,
  left: `0px`,
  top: `0px`,
});

const ProductCardTemp1: any = styled(ProductCardTemp)(({ theme }: any) => ({
  width: `311px`,
  height: `496px`,
  margin: `0px`,
}));

function ProductCard(props: ProductCardProps): JSX.Element {
  const { data, fns } = useProductCard();

  return (
    <ProductCard1 className={props.className}>
      <Dialog open={data.isDialogOpen} onClose={fns.toggleDialog}>
        <Productdialogcontain>
          <Card271 open={data.isDialogOpen} onClose={fns.toggleDialog} />
        </Productdialogcontain>
      </Dialog>
      <Productcardcontainer>
        <ProductCardTemp1 />
      </Productcardcontainer>
    </ProductCard1>
  );
}

export default ProductCard;
