/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { styled } from '@mui/material/styles';
import ProductCard from 'components/ProductCard/ProductCard';
import { ProductSectionSurfaceHubDeviceProps } from 'types';
import useProductSectionSurfaceHubDevice from 'components/ProductSectionSurfaceHubDevice/useProductSectionSurfaceHubDevice';

const ScreenDesktop: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems:
    data.currentVariant === 'ScreenTablet'
      ? `flex-start`
      : data.currentVariant === 'ScreenMobile'
      ? `flex-start`
      : `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: 'auto',
  overflow:
    data.currentVariant === 'ScreenTablet'
      ? `hidden`
      : data.currentVariant === 'ScreenMobile'
      ? `hidden`
      : 'unset',
}));

const Rows: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `60px 0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
  overflow: `hidden`,
});

const SurfaceInnovationSpan1: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color: `rgba(51, 51, 51, 1)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'ScreenTablet'
      ? `48px`
      : data.currentVariant === 'ScreenMobile'
      ? `39px`
      : `56px`,
  letterSpacing: `-0.5px`,
  textDecoration: `none`,
  lineHeight: `100%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const SurfaceInnovationSpan2: any = styled('span', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  whiteSpace: `pre-wrap`,
  color:
    data.currentVariant === 'ScreenTablet'
      ? `rgba(0, 0, 0, 1)`
      : data.currentVariant === 'ScreenMobile'
      ? `rgba(0, 0, 0, 1)`
      : `rgba(0, 164, 239, 1)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'ScreenTablet'
      ? `48px`
      : data.currentVariant === 'ScreenMobile'
      ? `39px`
      : `56px`,
  letterSpacing: `-0.5px`,
  textDecoration: `none`,
  lineHeight: `100%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
}));

const SurfaceInnovation: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `700`,
  fontSize:
    data.currentVariant === 'ScreenTablet'
      ? `48px`
      : data.currentVariant === 'ScreenMobile'
      ? `39px`
      : `56px`,
  letterSpacing: `-0.5px`,
  textDecoration: `none`,
  lineHeight: `100%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const UnleashingPotentialF: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(51, 51, 51, 0.75)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `400`,
  fontSize:
    data.currentVariant === 'ScreenTablet'
      ? `23px`
      : data.currentVariant === 'ScreenMobile'
      ? `20px`
      : `27px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `133.39999914169312%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `15px 0px 0px 0px`,
}));

const Carousel: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  backgroundImage: `url(assets/images/ProductSectionSurfaceHubdevices_carousel.png)`,
  backgroundPosition: `center`,
  backgroundSize:
    data.currentVariant === 'ScreenTablet'
      ? `100%`
      : data.currentVariant === 'ScreenMobile'
      ? `100%`
      : `contain`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding:
    data.currentVariant === 'ScreenMobile'
      ? `15px 0px 0px 0px`
      : `30px 15px 0px 15px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `15px 0px 0px 0px`,
  overflow:
    data.currentVariant === 'ScreenTablet'
      ? 'unset'
      : data.currentVariant === 'ScreenMobile'
      ? 'unset'
      : `hidden`,
}));

const LeftArrow: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: data.currentVariant === 'ScreenMobile' ? `0px 6px` : `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
}));

const Arrow1: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height: `0px`,
  width: data.currentVariant === 'ScreenMobile' ? `24px` : `48px`,
  margin: `0px`,
}));

const Products: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf:
    data.currentVariant === 'ScreenTablet'
      ? 'unset'
      : data.currentVariant === 'ScreenMobile'
      ? 'unset'
      : `stretch`,
  flex: `1`,
  margin:
    data.currentVariant === 'ScreenTablet'
      ? `0px 0px 0px 10px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px`
      : `0px 0px 0px 15px`,
}));

const ProductCard1: any = styled(ProductCard, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  width: `300px`,
  height: `500px`,
  margin: data.currentVariant === 'ScreenTablet' ? `0px 0px 0px 15px` : `0px`,
}));

const ProductCard2: any = styled(ProductCard, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  width: `300px`,
  height: `500px`,
  margin:
    data.currentVariant === 'ScreenTablet'
      ? `0px 0px 0px 15px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px`
      : `0px 0px 0px 30px`,
}));

const ProductCard3: any = styled(ProductCard, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  width: `300px`,
  height: `500px`,
  margin:
    data.currentVariant === 'ScreenTablet'
      ? `0px 0px 0px 15px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px`
      : `0px 0px 0px 30px`,
}));

const ProductCard4: any = styled(ProductCard, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  width: `300px`,
  height: `500px`,
  margin:
    data.currentVariant === 'ScreenTablet'
      ? `0px 0px 0px 15px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px`
      : `0px 0px 0px 30px`,
}));

const ProductCard5: any = styled(ProductCard, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  width: `300px`,
  height: `500px`,
  margin:
    data.currentVariant === 'ScreenTablet'
      ? `0px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px`
      : `0px 0px 0px 30px`,
}));

const ProductCard6: any = styled(ProductCard, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  width: `300px`,
  height: `500px`,
  margin:
    data.currentVariant === 'ScreenTablet'
      ? `0px 0px 0px 15px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px`
      : `0px 0px 0px 30px`,
}));

const ProductCard7: any = styled(ProductCard, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  width: `300px`,
  height: `500px`,
  margin:
    data.currentVariant === 'ScreenTablet'
      ? `0px 0px 0px 15px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px`
      : `0px 0px 0px 30px`,
}));

const RightArrow: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: data.currentVariant === 'ScreenMobile' ? `0px 6px` : `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin:
    data.currentVariant === 'ScreenTablet'
      ? `0px 0px 0px 10px`
      : data.currentVariant === 'ScreenMobile'
      ? `0px`
      : `0px 0px 0px 15px`,
  overflow: `hidden`,
}));

const Arrow11: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height: `0px`,
  width: data.currentVariant === 'ScreenMobile' ? `24px` : `48px`,
  margin: `0px`,
}));

function ProductSectionSurfaceHubDevice(
  props: ProductSectionSurfaceHubDeviceProps
): JSX.Element {
  const { data } = useProductSectionSurfaceHubDevice();

  return (
    <ScreenDesktop className={props.className} data={data}>
      <Rows>
        <SurfaceInnovation data={data}>
          <SurfaceInnovationSpan1
            data={data}
          >{`Surface `}</SurfaceInnovationSpan1>
          <SurfaceInnovationSpan2
            data={data}
          >{`Innovation`}</SurfaceInnovationSpan2>
        </SurfaceInnovation>
        <UnleashingPotentialF data={data}>
          {`Unleashing Potential for Your Modern Workplace`}
        </UnleashingPotentialF>
        <Carousel data={data}>
          <LeftArrow data={data}>
            <Arrow1
              data={data}
              src={`assets/images/ProductSectionSurfaceHubdevices_Arrow_1.png`}
              loading="lazy"
              alt={'Arrow 1'}
            />
          </LeftArrow>
          <Products data={data}>
            {!(data.currentVariant === 'ScreenTablet') &&
              !(data.currentVariant === 'ScreenMobile') && (
                <ProductCard1 data={data} />
              )}
            {!(data.currentVariant === 'ScreenTablet') &&
              !(data.currentVariant === 'ScreenMobile') && (
                <ProductCard2 data={data} />
              )}
            {!(data.currentVariant === 'ScreenTablet') &&
              !(data.currentVariant === 'ScreenMobile') && (
                <ProductCard3 data={data} />
              )}
            {!(data.currentVariant === 'ScreenTablet') &&
              !(data.currentVariant === 'ScreenMobile') && (
                <ProductCard4 data={data} />
              )}
            {data.currentVariant === 'ScreenTablet' && (
              <ProductCard5 data={data} />
            )}
            {data.currentVariant === 'ScreenTablet' && (
              <ProductCard6 data={data} />
            )}
            {data.currentVariant === 'ScreenMobile' && (
              <ProductCard7 data={data} />
            )}
          </Products>
          <RightArrow data={data}>
            <Arrow11
              data={data}
              src={`assets/images/ProductSectionSurfaceHubdevices_Arrow_1_1.png`}
              loading="lazy"
              alt={'Arrow 1'}
            />
          </RightArrow>
        </Carousel>
      </Rows>
    </ScreenDesktop>
  );
}

export default ProductSectionSurfaceHubDevice;
