/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Button } from '@mui/material';
import { styled } from '@mui/material/styles';
import Menulinklist from 'components/Menulinklist/Menulinklist';
import { SidebarcontentProps } from 'types';
import useSidebarcontent from 'components/Sidebarcontent/useSidebarcontent';

const ScreenTablet: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding:
    data.currentVariant === 'ScreenMobile'
      ? `35px 16px 0px 16px`
      : `35px 0px 0px 0px`,
  boxSizing: `border-box`,
  height: 'auto',
  maxWidth: data.currentVariant === 'ScreenMobile' ? `unset` : `400px`,
}));

const MenuItems: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const LogoPosition: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `10px 40px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const MowoLogo: any = styled('img', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  height: data.currentVariant === 'ScreenMobile' ? `53px` : `61px`,
  width: data.currentVariant === 'ScreenMobile' ? `288px` : `326px`,
  objectFit: `cover`,
  margin: `0px`,
  alignSelf: data.currentVariant === 'ScreenMobile' ? `stretch` : 'unset',
}));

const Items: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `26px 0px 0px 0px`,
});

const Frame143: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Menulinklist1: any = styled(Menulinklist)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const ButtonContained: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  alignSelf: `stretch`,
  margin: `26px 0px 0px 0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Medium'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Medium'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Medium'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Medium'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Medium'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Medium'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Medium'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Medium'].textTransform,
}));

function Sidebarcontent(props: SidebarcontentProps): JSX.Element {
  const { data } = useSidebarcontent();

  return (
    <ScreenTablet className={props.className} data={data}>
      <MenuItems>
        <LogoPosition>
          <MowoLogo
            data={data}
            src={`assets/images/Sidebarcontent_MOWO_Logo.png`}
            loading="lazy"
            alt={'MOWO Logo'}
          />
        </LogoPosition>
        <Items>
          <Frame143>
            <Menulinklist1 {...props}/>
          </Frame143>
          <ButtonContained
            variant="contained"
            size={'medium'}
            color={'primary'}
            disabled={false}
            data={data}
          >
            {'Book a meeting'}
          </ButtonContained>
        </Items>
      </MenuItems>
    </ScreenTablet>
  );
}

export default Sidebarcontent;
