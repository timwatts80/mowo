/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Link as MUILink } from '@mui/material';
import { styled } from '@mui/material/styles';
import { Link1Props } from 'types';
import useLink1 from 'components/Link1/useLink1';

const StateDefault: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.isFocus ? `column` : `row`,
  width: '100%',
  justifyContent: `center`,
  alignItems: `center`,
  padding: `9px 0px`,
  boxSizing: `border-box`,
  height: 'auto',
  backgroundColor: data.isFocus
    ? theme.palette['Primary']['Shades']['8p']
    : 'unset',
}));

const Link2: any = styled(MUILink, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `0px`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: theme.typography['Typography']['Body 2 Link'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 2 Link'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 2 Link'].fontWeight,
  fontSize: theme.typography['Typography']['Body 2 Link'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 2 Link'].letterSpacing,
  lineHeight: theme.typography['Typography']['Body 2 Link'].lineHeight,
  textDecoration: `'initial'`,
  textTransform: theme.typography['Typography']['Body 2 Link'].textTransform,
}));

function Link1(props: Link1Props): JSX.Element {
  const { data } = useLink1();

  return (
    <StateDefault className={props.className} data={data}>
      <Link2
        color={'primary'}
        disabled={false}
        underline={'always'}
        href={props.href}
        data={'data'}
        data={data}
      >
        {props.menuLink.title}
      </Link2>
    </StateDefault>
  );
}

export default Link1;
