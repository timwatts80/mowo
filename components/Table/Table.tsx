/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Divider } from '@mui/material';
import { styled } from '@mui/material/styles';
import { TableProps } from 'types';

const Table1: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: 'auto',
});

const Frame149: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Frame147: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TableHeader: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label: any = styled('div')(({ theme }: any) => ({
  backgroundColor: `rgba(248, 248, 248, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
}));

const Body1: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Table Header'].fontStyle,
  fontFamily: theme.typography['Components']['Table Header'].fontFamily,
  fontWeight: theme.typography['Components']['Table Header'].fontWeight,
  fontSize: theme.typography['Components']['Table Header'].fontSize,
  letterSpacing: theme.typography['Components']['Table Header'].letterSpacing,
  lineHeight: theme.typography['Components']['Table Header'].lineHeight,
  textDecoration: theme.typography['Components']['Table Header'].textDecoration,
  textTransform: theme.typography['Components']['Table Header'].textTransform,
  margin: `0px`,
}));

const TableHeader1: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label1: any = styled('div')(({ theme }: any) => ({
  backgroundColor: `rgba(248, 248, 248, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
}));

const Body11: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Table Header'].fontStyle,
  fontFamily: theme.typography['Components']['Table Header'].fontFamily,
  fontWeight: theme.typography['Components']['Table Header'].fontWeight,
  fontSize: theme.typography['Components']['Table Header'].fontSize,
  letterSpacing: theme.typography['Components']['Table Header'].letterSpacing,
  lineHeight: theme.typography['Components']['Table Header'].lineHeight,
  textDecoration: theme.typography['Components']['Table Header'].textDecoration,
  textTransform: theme.typography['Components']['Table Header'].textTransform,
  margin: `0px`,
}));

const TableHeader2: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label2: any = styled('div')(({ theme }: any) => ({
  backgroundColor: `rgba(248, 248, 248, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
}));

const Body12: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Table Header'].fontStyle,
  fontFamily: theme.typography['Components']['Table Header'].fontFamily,
  fontWeight: theme.typography['Components']['Table Header'].fontWeight,
  fontSize: theme.typography['Components']['Table Header'].fontSize,
  letterSpacing: theme.typography['Components']['Table Header'].letterSpacing,
  lineHeight: theme.typography['Components']['Table Header'].lineHeight,
  textDecoration: theme.typography['Components']['Table Header'].textDecoration,
  textTransform: theme.typography['Components']['Table Header'].textTransform,
  margin: `0px`,
}));

const TableHeader3: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label3: any = styled('div')(({ theme }: any) => ({
  backgroundColor: `rgba(248, 248, 248, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
}));

const Body13: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Table Header'].fontStyle,
  fontFamily: theme.typography['Components']['Table Header'].fontFamily,
  fontWeight: theme.typography['Components']['Table Header'].fontWeight,
  fontSize: theme.typography['Components']['Table Header'].fontSize,
  letterSpacing: theme.typography['Components']['Table Header'].letterSpacing,
  lineHeight: theme.typography['Components']['Table Header'].lineHeight,
  textDecoration: theme.typography['Components']['Table Header'].textDecoration,
  textTransform: theme.typography['Components']['Table Header'].textTransform,
  margin: `0px`,
}));

const TableHeader4: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label4: any = styled('div')(({ theme }: any) => ({
  backgroundColor: `rgba(248, 248, 248, 1)`,
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
}));

const Body14: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Components']['Table Header'].fontStyle,
  fontFamily: theme.typography['Components']['Table Header'].fontFamily,
  fontWeight: theme.typography['Components']['Table Header'].fontWeight,
  fontSize: theme.typography['Components']['Table Header'].fontSize,
  letterSpacing: theme.typography['Components']['Table Header'].letterSpacing,
  lineHeight: theme.typography['Components']['Table Header'].lineHeight,
  textDecoration: theme.typography['Components']['Table Header'].textDecoration,
  textTransform: theme.typography['Components']['Table Header'].textTransform,
  margin: `0px`,
}));

const Frame152: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Frame150: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TableRow: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label5: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Body15: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Subtitle 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 2'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 2'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 2'].textTransform,
  margin: `0px`,
}));

const DividerHorizontal: any = styled(Divider)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const TableRow1: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label6: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Body16: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Subtitle 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 2'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 2'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 2'].textTransform,
  margin: `0px`,
}));

const DividerHorizontal1: any = styled(Divider)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const TableRow2: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label7: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Body17: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Subtitle 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 2'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 2'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 2'].textTransform,
  margin: `0px`,
}));

const DividerHorizontal2: any = styled(Divider)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const TableRow3: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label8: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Body18: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Subtitle 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 2'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 2'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 2'].textTransform,
  margin: `0px`,
}));

const DividerHorizontal3: any = styled(Divider)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const TableRow4: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label9: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Body19: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Subtitle 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 2'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 2'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 2'].textTransform,
  margin: `0px`,
}));

const DividerHorizontal4: any = styled(Divider)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Frame153: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Frame1501: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TableRow5: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label10: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Body110: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Subtitle 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 2'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 2'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 2'].textTransform,
  margin: `0px`,
}));

const DividerHorizontal5: any = styled(Divider)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const TableRow6: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label11: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Body111: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Subtitle 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 2'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 2'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 2'].textTransform,
  margin: `0px`,
}));

const DividerHorizontal6: any = styled(Divider)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const TableRow7: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label12: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Body112: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Subtitle 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 2'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 2'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 2'].textTransform,
  margin: `0px`,
}));

const DividerHorizontal7: any = styled(Divider)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const TableRow8: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label13: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Body113: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Subtitle 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 2'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 2'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 2'].textTransform,
  margin: `0px`,
}));

const DividerHorizontal8: any = styled(Divider)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const TableRow9: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label14: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Body114: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Subtitle 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 2'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 2'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 2'].textTransform,
  margin: `0px`,
}));

const DividerHorizontal9: any = styled(Divider)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const Frame154: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Frame1502: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TableRow10: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label15: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Body115: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Subtitle 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 2'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 2'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 2'].textTransform,
  margin: `0px`,
}));

const DividerHorizontal10: any = styled(Divider)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const TableRow11: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label16: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Body116: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Subtitle 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 2'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 2'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 2'].textTransform,
  margin: `0px`,
}));

const DividerHorizontal11: any = styled(Divider)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const TableRow12: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label17: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Body117: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Subtitle 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 2'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 2'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 2'].textTransform,
  margin: `0px`,
}));

const DividerHorizontal12: any = styled(Divider)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const TableRow13: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label18: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Body118: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Subtitle 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 2'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 2'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 2'].textTransform,
  margin: `0px`,
}));

const DividerHorizontal13: any = styled(Divider)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

const TableRow14: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-end`,
  padding: `0px`,
  boxSizing: `border-box`,
  flex: `1`,
  margin: `0px`,
});

const Label19: any = styled('div')({
  borderRadius: `0px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `8px 16px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const Body119: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: theme.palette['Text']['Primary'],
  fontStyle: theme.typography['Typography']['Subtitle 2'].fontStyle,
  fontFamily: theme.typography['Typography']['Subtitle 2'].fontFamily,
  fontWeight: theme.typography['Typography']['Subtitle 2'].fontWeight,
  fontSize: theme.typography['Typography']['Subtitle 2'].fontSize,
  letterSpacing: theme.typography['Typography']['Subtitle 2'].letterSpacing,
  lineHeight: theme.typography['Typography']['Subtitle 2'].lineHeight,
  textDecoration: theme.typography['Typography']['Subtitle 2'].textDecoration,
  textTransform: theme.typography['Typography']['Subtitle 2'].textTransform,
  margin: `0px`,
}));

const DividerHorizontal14: any = styled(Divider)(({ theme }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
}));

function Table(props: TableProps): JSX.Element {
  return (
    <Table1 className={props.className}>
      <Frame149>
        <Frame147>
          <TableHeader>
            <Label>
              <Body1>{`Body 1`}</Body1>
            </Label>
          </TableHeader>
          <TableHeader1>
            <Label1>
              <Body11>{`Body 1`}</Body11>
            </Label1>
          </TableHeader1>
          <TableHeader2>
            <Label2>
              <Body12>{`Body 1`}</Body12>
            </Label2>
          </TableHeader2>
          <TableHeader3>
            <Label3>
              <Body13>{`Body 1`}</Body13>
            </Label3>
          </TableHeader3>
          <TableHeader4>
            <Label4>
              <Body14>{`Body 1`}</Body14>
            </Label4>
          </TableHeader4>
        </Frame147>
      </Frame149>
      <Frame152>
        <Frame150>
          <TableRow>
            <Label5>
              <Body15>{`Body 1`}</Body15>
            </Label5>
            <DividerHorizontal orientation="horizontal" />
          </TableRow>
          <TableRow1>
            <Label6>
              <Body16>{`Body 1`}</Body16>
            </Label6>
            <DividerHorizontal1 orientation="horizontal" />
          </TableRow1>
          <TableRow2>
            <Label7>
              <Body17>{`Body 1`}</Body17>
            </Label7>
            <DividerHorizontal2 orientation="horizontal" />
          </TableRow2>
          <TableRow3>
            <Label8>
              <Body18>{`Body 1`}</Body18>
            </Label8>
            <DividerHorizontal3 orientation="horizontal" />
          </TableRow3>
          <TableRow4>
            <Label9>
              <Body19>{`Body 1`}</Body19>
            </Label9>
            <DividerHorizontal4 orientation="horizontal" />
          </TableRow4>
        </Frame150>
      </Frame152>
      <Frame153>
        <Frame1501>
          <TableRow5>
            <Label10>
              <Body110>{`Body 1`}</Body110>
            </Label10>
            <DividerHorizontal5 orientation="horizontal" />
          </TableRow5>
          <TableRow6>
            <Label11>
              <Body111>{`Body 1`}</Body111>
            </Label11>
            <DividerHorizontal6 orientation="horizontal" />
          </TableRow6>
          <TableRow7>
            <Label12>
              <Body112>{`Body 1`}</Body112>
            </Label12>
            <DividerHorizontal7 orientation="horizontal" />
          </TableRow7>
          <TableRow8>
            <Label13>
              <Body113>{`Body 1`}</Body113>
            </Label13>
            <DividerHorizontal8 orientation="horizontal" />
          </TableRow8>
          <TableRow9>
            <Label14>
              <Body114>{`Body 1`}</Body114>
            </Label14>
            <DividerHorizontal9 orientation="horizontal" />
          </TableRow9>
        </Frame1501>
      </Frame153>
      <Frame154>
        <Frame1502>
          <TableRow10>
            <Label15>
              <Body115>{`Body 1`}</Body115>
            </Label15>
            <DividerHorizontal10 orientation="horizontal" />
          </TableRow10>
          <TableRow11>
            <Label16>
              <Body116>{`Body 1`}</Body116>
            </Label16>
            <DividerHorizontal11 orientation="horizontal" />
          </TableRow11>
          <TableRow12>
            <Label17>
              <Body117>{`Body 1`}</Body117>
            </Label17>
            <DividerHorizontal12 orientation="horizontal" />
          </TableRow12>
          <TableRow13>
            <Label18>
              <Body118>{`Body 1`}</Body118>
            </Label18>
            <DividerHorizontal13 orientation="horizontal" />
          </TableRow13>
          <TableRow14>
            <Label19>
              <Body119>{`Body 1`}</Body119>
            </Label19>
            <DividerHorizontal14 orientation="horizontal" />
          </TableRow14>
        </Frame1502>
      </Frame154>
    </Table1>
  );
}

export default Table;
