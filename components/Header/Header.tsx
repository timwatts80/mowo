/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preserve that ability, always export from Quest to regenerate this file.
 *   To setup element attributes and CSS properties, use the Quest web app
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { Button } from '@mui/material';
import { styled } from '@mui/material/styles';
import { HeaderProps } from 'types';
import useHeader from 'components/Header/useHeader';

const Property1Desktop: any = styled('div')({
  backgroundColor: `rgba(255, 255, 255, 1)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  width: '100%',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
  height: 'auto',
});

const Hero: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  overflow: `hidden`,
});

const FillHero: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: data.currentVariant === 'Property1Mobile' ? `column` : `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
}));

const LeftSide: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `180px 0px 180px 60px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
});

const Text: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const EmpoweringTheModernWSpan1: any = styled('span')({
  whiteSpace: `pre-wrap`,
  color: `rgba(51, 51, 51, 1)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `700`,
  fontSize: `66px`,
  letterSpacing: `-3.96px`,
  textDecoration: `none`,
  lineHeight: `100%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  width: 'unset',
  margin: 'unset',
});

const EmpoweringTheModernWSpan2: any = styled('span')({
  whiteSpace: `pre-wrap`,
  color: `rgba(242, 80, 34, 1)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `700`,
  fontSize: `66px`,
  letterSpacing: `-3.96px`,
  textDecoration: `none`,
  lineHeight: `100%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  width: 'unset',
  margin: 'unset',
});

const EmpoweringTheModernW: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `700`,
  fontSize: `66px`,
  letterSpacing: `-3.96px`,
  textDecoration: `none`,
  lineHeight: `100%`,
  textTransform: `none`,
  width: `660px`,
  margin: `0px`,
});

const TransformYourOrganiz: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(51, 51, 51, 0.75)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `400`,
  fontSize: `33px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `133.39999914169312%`,
  textTransform: `none`,
  width: `660px`,
  margin: `20px 0px 0px 0px`,
}));

const Btns: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `40px 0px 0px 0px`,
});

const BtnsPosition: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  width: `660px`,
  margin: `0px`,
});

const ButtonContained: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Large'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Large'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Large'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Large'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Large'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Large'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Large'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Large'].textTransform,
}));

const ButtonOutlined: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  margin: `0px 0px 0px 22px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Large'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Large'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Large'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Large'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Large'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Large'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Large'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Large'].textTransform,
}));

const Video: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `60px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
});

const Pic: any = styled('div')({
  backgroundImage: `url(assets/images/Header_Pic.png)`,
  backgroundPosition: `center`,
  backgroundSize: `contain`,
  backgroundRepeat: `no-repeat`,
  borderRadius: `20px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
  overflow: `hidden`,
});

const Pic1: any = styled('div')({
  backgroundImage: `url(assets/images/Header_Pic_1.png)`,
  backgroundPosition: `center`,
  backgroundSize: `100%`,
  backgroundRepeat: `no-repeat`,
  borderRadius: `20px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `10px 0px 0px 0px`,
  overflow: `hidden`,
});

const Pic2: any = styled('div')({
  backgroundImage: `url(assets/images/Header_Pic_2.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  borderRadius: `20px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `10px 0px 0px 0px`,
  overflow: `hidden`,
});

const Pic3: any = styled('div')({
  backgroundImage: `url(assets/images/Header_Pic_3.png)`,
  backgroundPosition: `center`,
  backgroundSize: `cover`,
  backgroundRepeat: `no-repeat`,
  borderRadius: `20px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `10px 0px 0px 0px`,
  overflow: `hidden`,
});

const LeftSide1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `45px 0px 60px 45px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  flex: `1`,
  margin: `0px`,
});

const Text1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const EmpoweringTheModernW1Span1: any = styled('span')({
  whiteSpace: `pre-wrap`,
  color: `rgba(51, 51, 51, 1)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `700`,
  fontSize: `57px`,
  letterSpacing: `-3.42px`,
  textDecoration: `none`,
  lineHeight: `100%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
});

const EmpoweringTheModernW1Span2: any = styled('span')({
  whiteSpace: `pre-wrap`,
  color: `rgba(242, 80, 34, 1)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `700`,
  fontSize: `57px`,
  letterSpacing: `-3.42px`,
  textDecoration: `none`,
  lineHeight: `100%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
});

const EmpoweringTheModernW1: any = styled('div')({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `700`,
  fontSize: `57px`,
  letterSpacing: `-3.42px`,
  textDecoration: `none`,
  lineHeight: `100%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TransformYourOrganiz1: any = styled('div')(({ theme }: any) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(51, 51, 51, 0.75)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `400`,
  fontSize: `28px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `133.39999914169312%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `22px 0px 0px 0px`,
}));

const Btns1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `12px 90px 0px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const BtnsPosition1: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ButtonContained1: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Large'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Large'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Large'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Large'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Large'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Large'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Large'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Large'].textTransform,
}));

const ButtonOutlined1: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  alignSelf: `stretch`,
  margin: `22px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Large'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Large'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Large'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Large'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Large'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Large'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Large'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Large'].textTransform,
}));

const Video1: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `15px 0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
  height: data.currentVariant === 'Property1Mobile' ? `631px` : 'unset',
}));

const Pic4: any = styled('div')({
  backgroundImage: `url(assets/images/Header_Pic_4.png)`,
  backgroundPosition: `center`,
  backgroundSize: `contain`,
  backgroundRepeat: `no-repeat`,
  borderRadius: `20px`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  height: `452px`,
  width: `330px`,
  margin: `0px`,
  overflow: `hidden`,
});

const LeftSide2: any = styled('div', {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ data }: any) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `45px 30px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  width: data.currentVariant === 'Property1Mobile' ? 'unset' : `375px`,
  margin: `0px`,
}));

const Image1: any = styled('div')({
  backgroundImage: `url(assets/images/Header_image.png)`,
  backgroundPosition: `center`,
  backgroundSize: `contain`,
  backgroundRepeat: `no-repeat`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  alignSelf: `stretch`,
  height: `210px`,
  margin: `0px`,
});

const Text2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const EmpoweringTheModernW2Span1: any = styled('span')({
  whiteSpace: `pre-wrap`,
  color: `rgba(51, 51, 51, 1)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `700`,
  fontSize: `46px`,
  letterSpacing: `-2.76px`,
  textDecoration: `none`,
  lineHeight: `100%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
});

const EmpoweringTheModernW2Span2: any = styled('span')({
  whiteSpace: `pre-wrap`,
  color: `rgba(242, 80, 34, 1)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `700`,
  fontSize: `46px`,
  letterSpacing: `-2.76px`,
  textDecoration: `none`,
  lineHeight: `100%`,
  textTransform: `none`,
  textAlign: 'unset',
  fontSynthesis: 'unset',
  alignSelf: 'unset',
  margin: 'unset',
});

const EmpoweringTheModernW2: any = styled('div')({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(0, 0, 0, 1)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `700`,
  fontSize: `46px`,
  letterSpacing: `-2.76px`,
  textDecoration: `none`,
  lineHeight: `100%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const TransformYouOrganiza: any = styled('div')(({ theme }: any) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  fontSynthesis: `none`,
  color: `rgba(51, 51, 51, 0.75)`,
  fontStyle: `normal`,
  fontFamily: `Segoe UI`,
  fontWeight: `400`,
  fontSize: `24px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  lineHeight: `133.39999914169312%`,
  textTransform: `none`,
  alignSelf: `stretch`,
  margin: `22px 0px 0px 0px`,
}));

const Btns2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `30px 0px 0px 0px`,
});

const BtnsPosition2: any = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: `0px`,
});

const ButtonContained2: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  alignSelf: `stretch`,
  margin: `0px`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: theme.typography['Components']['Button Font - Large'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Large'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Large'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Large'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Large'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Large'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Large'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Large'].textTransform,
}));

const ButtonOutlined2: any = styled(Button, {
  shouldForwardProp: (prop: any) => !['data'].includes(prop.toString()),
})(({ theme, data }: any) => ({
  alignSelf: `stretch`,
  margin: `22px 0px 0px 0px`,
  color: theme.palette['Primary']['Main'],
  fontStyle: theme.typography['Components']['Button Font - Large'].fontStyle,
  fontFamily: theme.typography['Components']['Button Font - Large'].fontFamily,
  fontWeight: theme.typography['Components']['Button Font - Large'].fontWeight,
  fontSize: theme.typography['Components']['Button Font - Large'].fontSize,
  letterSpacing:
    theme.typography['Components']['Button Font - Large'].letterSpacing,
  lineHeight: theme.typography['Components']['Button Font - Large'].lineHeight,
  textDecoration:
    theme.typography['Components']['Button Font - Large'].textDecoration,
  textTransform:
    theme.typography['Components']['Button Font - Large'].textTransform,
}));

function Header(props: HeaderProps): JSX.Element {
  const { data } = useHeader();

  return (
    <Property1Desktop className={props.className}>
      <Hero>
        <FillHero data={data}>
          {!(data.currentVariant === 'Property1Tablet') &&
            !(data.currentVariant === 'Property1Mobile') && (
              <LeftSide>
                <Text>
                  <EmpoweringTheModernW>
                    <EmpoweringTheModernWSpan1>{`EMPOWERING THE `}</EmpoweringTheModernWSpan1>
                    <EmpoweringTheModernWSpan2>{`MODERN WORKPLACE`}</EmpoweringTheModernWSpan2>
                  </EmpoweringTheModernW>
                  <TransformYourOrganiz>
                    {`Transform your organization with Surface for Business, Microsoft 365, customized services and training by MOWO.`}
                  </TransformYourOrganiz>
                </Text>
                <Btns>
                  <BtnsPosition>
                    <ButtonContained
                      variant="contained"
                      size={'large'}
                      color={'primary'}
                      disabled={false}
                      data={data}
                    >
                      {'Book a meeting'}
                    </ButtonContained>
                    <ButtonOutlined
                      variant="outlined"
                      size={'large'}
                      color={'primary'}
                      disabled={false}
                      data={data}
                    >
                      {'See devices'}
                    </ButtonOutlined>
                  </BtnsPosition>
                </Btns>
              </LeftSide>
            )}
          {!(data.currentVariant === 'Property1Tablet') &&
            !(data.currentVariant === 'Property1Mobile') && (
              <Video>
                <Pic></Pic>
                {false && <Pic1></Pic1>}
                {false && <Pic2></Pic2>}
                {false && <Pic3></Pic3>}
              </Video>
            )}
          {data.currentVariant === 'Property1Tablet' && (
            <LeftSide1>
              <Text1>
                <EmpoweringTheModernW1>
                  <EmpoweringTheModernW1Span1>{`EMPOWERING THE `}</EmpoweringTheModernW1Span1>
                  <EmpoweringTheModernW1Span2>{`MODERN WORKPLACE`}</EmpoweringTheModernW1Span2>
                </EmpoweringTheModernW1>
                <TransformYourOrganiz1>
                  {`Transform your organization with Surface for Business, Microsoft 365, customized services and training by MOWO.`}
                </TransformYourOrganiz1>
              </Text1>
              <Btns1>
                <BtnsPosition1>
                  <ButtonContained1
                    variant="contained"
                    size={'large'}
                    color={'primary'}
                    disabled={false}
                    data={data}
                  >
                    {'Book a meeting'}
                  </ButtonContained1>
                  <ButtonOutlined1
                    variant="outlined"
                    size={'large'}
                    color={'primary'}
                    disabled={false}
                    data={data}
                  >
                    {'See devices'}
                  </ButtonOutlined1>
                </BtnsPosition1>
              </Btns1>
            </LeftSide1>
          )}
          {data.currentVariant === 'Property1Tablet' && (
            <Video1 data={data}>
              <Pic4></Pic4>
            </Video1>
          )}
          {data.currentVariant === 'Property1Mobile' && (
            <LeftSide2 data={data}>
              <Image1></Image1>
              <Text2>
                <EmpoweringTheModernW2>
                  <EmpoweringTheModernW2Span1>{`EMPOWERING THE`}</EmpoweringTheModernW2Span1>
                  <EmpoweringTheModernW2Span2>{` MODERN WORKPLACE`}</EmpoweringTheModernW2Span2>
                </EmpoweringTheModernW2>
                <TransformYouOrganiza>
                  {`Transform you organization with Surface for Business, Microsoft 365, customized services and training by MOWO.`}
                </TransformYouOrganiza>
              </Text2>
              <Btns2>
                <BtnsPosition2>
                  <ButtonContained2
                    variant="contained"
                    size={'large'}
                    color={'primary'}
                    disabled={false}
                    data={data}
                  >
                    {'Book a meeting'}
                  </ButtonContained2>
                  <ButtonOutlined2
                    variant="outlined"
                    size={'large'}
                    color={'primary'}
                    disabled={false}
                    data={data}
                  >
                    {'See devices'}
                  </ButtonOutlined2>
                </BtnsPosition2>
              </Btns2>
            </LeftSide2>
          )}
        </FillHero>
      </Hero>
    </Property1Desktop>
  );
}

export default Header;
